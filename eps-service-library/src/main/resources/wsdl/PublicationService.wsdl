<?xml version="1.0" encoding="UTF-8"?>
<wsdl:definitions name="PublicationServiceService" targetNamespace="org.socraticgrid.hl7.services.eps" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="org.socraticgrid.hl7.services.eps" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:types>
<xs:schema xmlns:tns="org.socraticgrid.hl7.services.eps" xmlns:xs="http://www.w3.org/2001/XMLSchema" attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="org.socraticgrid.hl7.services.eps">
  <xs:element name="assertPublisherPresence" type="tns:assertPublisherPresence"/>
  <xs:element name="assertPublisherPresenceResponse" type="tns:assertPublisherPresenceResponse"/>
  <xs:element name="deleteEvent" type="tns:deleteEvent"/>
  <xs:element name="deleteEventResponse" type="tns:deleteEventResponse"/>
  <xs:element name="message" type="tns:message"/>
  <xs:element name="publishEvent" type="tns:publishEvent"/>
  <xs:element name="publishEventResponse" type="tns:publishEventResponse"/>
  <xs:complexType name="deleteEvent">
    <xs:sequence>
      <xs:element minOccurs="0" name="topic" type="xs:string"/>
      <xs:element minOccurs="0" name="messageId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="deleteEventResponse">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="assertPublisherPresence">
    <xs:sequence>
      <xs:element minOccurs="0" name="topic" type="xs:string"/>
      <xs:element minOccurs="0" name="presence" type="tns:presenceState"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="assertPublisherPresenceResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="publishEvent">
    <xs:sequence>
      <xs:element minOccurs="0" name="topic" type="xs:string"/>
      <xs:element minOccurs="0" name="event" type="tns:message"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="message">
    <xs:sequence>
      <xs:element minOccurs="0" name="header" type="tns:messageHeader"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="messageBodies" nillable="true" type="tns:messageBody"/>
      <xs:element minOccurs="0" name="state" type="tns:messageState"/>
      <xs:element minOccurs="0" name="title" type="xs:string"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="topics" nillable="true" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="messageHeader">
    <xs:sequence>
      <xs:element minOccurs="0" name="author" type="tns:authorship"/>
      <xs:element minOccurs="0" name="messageCreatedTime" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="messageExpirationTime" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="messageId" type="xs:string"/>
      <xs:element minOccurs="0" name="messagePublicationTime" type="xs:dateTime"/>
      <xs:element name="priority" type="xs:int"/>
      <xs:element minOccurs="0" name="publisher" type="tns:user"/>
      <xs:element minOccurs="0" name="replayId" type="xs:string"/>
      <xs:element minOccurs="0" name="subject" type="xs:string"/>
      <xs:element minOccurs="0" name="topicId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="authorship">
    <xs:sequence>
      <xs:element minOccurs="0" name="authorName" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="user">
    <xs:sequence>
      <xs:element minOccurs="0" name="defaultNotificationAddress" type="tns:notificationAddress"/>
      <xs:element minOccurs="0" name="defaultOnDemandEndpoint" type="tns:notificationAddress"/>
      <xs:element minOccurs="0" name="name" type="xs:string"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="privledges" nillable="true" type="tns:role"/>
      <xs:element name="supportsPublishOnDemand" type="xs:boolean"/>
      <xs:element minOccurs="0" name="userId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="notificationAddress">
    <xs:sequence>
      <xs:element minOccurs="0" name="endpoint" type="xs:string"/>
      <xs:element minOccurs="0" name="type" type="tns:addressType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="messageBody">
    <xs:sequence>
      <xs:element minOccurs="0" name="body" type="xs:string"/>
      <xs:element minOccurs="0" name="type" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="publishEventResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="presenceState">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Online"/>
      <xs:enumeration value="Offline"/>
      <xs:enumeration value="Indeterminate"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="addressType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="URI"/>
      <xs:enumeration value="XEP"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="role">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Normal"/>
      <xs:enumeration value="Admin"/>
      <xs:enumeration value="Restricted"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="messageState">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Delivered"/>
      <xs:enumeration value="Expired"/>
      <xs:enumeration value="ReviewPending"/>
      <xs:enumeration value="Rejected"/>
      <xs:enumeration value="Initial"/>
      <xs:enumeration value="Approved"/>
      <xs:enumeration value="Deleted"/>
      <xs:enumeration value="Pending"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="ExpiredException" type="tns:ExpiredException"/>
  <xs:complexType name="ExpiredException">
    <xs:sequence>
      <xs:element minOccurs="0" name="message" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="NoSuchTopicException" type="tns:NoSuchTopicException"/>
  <xs:complexType name="NoSuchTopicException">
    <xs:sequence>
      <xs:element minOccurs="0" name="message" type="xs:string"/>
      <xs:element minOccurs="0" name="topic" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="NoSuchItemException" type="tns:NoSuchItemException"/>
  <xs:complexType name="NoSuchItemException">
    <xs:sequence>
      <xs:element minOccurs="0" name="message" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="NotAuthorizedException" type="tns:NotAuthorizedException"/>
  <xs:complexType name="NotAuthorizedException">
    <xs:sequence>
      <xs:element minOccurs="0" name="message" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="AuthenicationRequiredException" type="tns:AuthenicationRequiredException"/>
  <xs:complexType name="AuthenicationRequiredException">
    <xs:sequence>
      <xs:element minOccurs="0" name="message" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ConflictException" type="tns:ConflictException"/>
  <xs:complexType name="ConflictException">
    <xs:sequence>
      <xs:element minOccurs="0" name="message" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="InvalidDataException" type="tns:InvalidDataException"/>
  <xs:complexType name="InvalidDataException">
    <xs:sequence>
      <xs:element minOccurs="0" name="message" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="MediaFormatNotExceptedException" type="tns:MediaFormatNotExceptedException"/>
  <xs:complexType name="MediaFormatNotExceptedException">
    <xs:sequence>
      <xs:element minOccurs="0" name="formatId" type="xs:string"/>
      <xs:element minOccurs="0" name="message" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="IncompleteDataException" type="tns:IncompleteDataException"/>
  <xs:complexType name="IncompleteDataException">
    <xs:sequence>
      <xs:element minOccurs="0" name="message" type="xs:string"/>
      <xs:element minOccurs="0" name="missingElementName" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
</xs:schema>
  </wsdl:types>
  <wsdl:message name="deleteEvent">
    <wsdl:part name="parameters" element="tns:deleteEvent">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="InvalidDataException">
    <wsdl:part name="InvalidDataException" element="tns:InvalidDataException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteEventResponse">
    <wsdl:part name="parameters" element="tns:deleteEventResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="MediaFormatNotExceptedException">
    <wsdl:part name="MediaFormatNotExceptedException" element="tns:MediaFormatNotExceptedException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ExpiredException">
    <wsdl:part name="ExpiredException" element="tns:ExpiredException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="publishEventResponse">
    <wsdl:part name="parameters" element="tns:publishEventResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="publishEvent">
    <wsdl:part name="parameters" element="tns:publishEvent">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="NotAuthorizedException">
    <wsdl:part name="NotAuthorizedException" element="tns:NotAuthorizedException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="AuthenicationRequiredException">
    <wsdl:part name="AuthenicationRequiredException" element="tns:AuthenicationRequiredException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="assertPublisherPresence">
    <wsdl:part name="parameters" element="tns:assertPublisherPresence">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="NoSuchItemException">
    <wsdl:part name="NoSuchItemException" element="tns:NoSuchItemException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="assertPublisherPresenceResponse">
    <wsdl:part name="parameters" element="tns:assertPublisherPresenceResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="NoSuchTopicException">
    <wsdl:part name="NoSuchTopicException" element="tns:NoSuchTopicException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ConflictException">
    <wsdl:part name="ConflictException" element="tns:ConflictException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IncompleteDataException">
    <wsdl:part name="IncompleteDataException" element="tns:IncompleteDataException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:portType name="publication">
    <wsdl:operation name="deleteEvent">
      <wsdl:input name="deleteEvent" message="tns:deleteEvent">
    </wsdl:input>
      <wsdl:output name="deleteEventResponse" message="tns:deleteEventResponse">
    </wsdl:output>
      <wsdl:fault name="ExpiredException" message="tns:ExpiredException">
    </wsdl:fault>
      <wsdl:fault name="NoSuchTopicException" message="tns:NoSuchTopicException">
    </wsdl:fault>
      <wsdl:fault name="NoSuchItemException" message="tns:NoSuchItemException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="assertPublisherPresence">
      <wsdl:input name="assertPublisherPresence" message="tns:assertPublisherPresence">
    </wsdl:input>
      <wsdl:output name="assertPublisherPresenceResponse" message="tns:assertPublisherPresenceResponse">
    </wsdl:output>
      <wsdl:fault name="ExpiredException" message="tns:ExpiredException">
    </wsdl:fault>
      <wsdl:fault name="ConflictException" message="tns:ConflictException">
    </wsdl:fault>
      <wsdl:fault name="AuthenicationRequiredException" message="tns:AuthenicationRequiredException">
    </wsdl:fault>
      <wsdl:fault name="NotAuthorizedException" message="tns:NotAuthorizedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="publishEvent">
      <wsdl:input name="publishEvent" message="tns:publishEvent">
    </wsdl:input>
      <wsdl:output name="publishEventResponse" message="tns:publishEventResponse">
    </wsdl:output>
      <wsdl:fault name="IncompleteDataException" message="tns:IncompleteDataException">
    </wsdl:fault>
      <wsdl:fault name="NoSuchTopicException" message="tns:NoSuchTopicException">
    </wsdl:fault>
      <wsdl:fault name="InvalidDataException" message="tns:InvalidDataException">
    </wsdl:fault>
      <wsdl:fault name="AuthenicationRequiredException" message="tns:AuthenicationRequiredException">
    </wsdl:fault>
      <wsdl:fault name="NotAuthorizedException" message="tns:NotAuthorizedException">
    </wsdl:fault>
      <wsdl:fault name="MediaFormatNotExceptedException" message="tns:MediaFormatNotExceptedException">
    </wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="PublicationServiceServiceSoapBinding" type="tns:publication">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="deleteEvent">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteEvent">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteEventResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ExpiredException">
        <soap:fault name="ExpiredException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="NoSuchTopicException">
        <soap:fault name="NoSuchTopicException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="NoSuchItemException">
        <soap:fault name="NoSuchItemException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="assertPublisherPresence">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="assertPublisherPresence">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="assertPublisherPresenceResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ExpiredException">
        <soap:fault name="ExpiredException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ConflictException">
        <soap:fault name="ConflictException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AuthenicationRequiredException">
        <soap:fault name="AuthenicationRequiredException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="NotAuthorizedException">
        <soap:fault name="NotAuthorizedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="publishEvent">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="publishEvent">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="publishEventResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IncompleteDataException">
        <soap:fault name="IncompleteDataException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="NoSuchTopicException">
        <soap:fault name="NoSuchTopicException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidDataException">
        <soap:fault name="InvalidDataException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AuthenicationRequiredException">
        <soap:fault name="AuthenicationRequiredException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="NotAuthorizedException">
        <soap:fault name="NotAuthorizedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MediaFormatNotExceptedException">
        <soap:fault name="MediaFormatNotExceptedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="PublicationServiceService">
    <wsdl:port name="publicationPort" binding="tns:PublicationServiceServiceSoapBinding">
      <soap:address location="http://localhost:9090/publicationPort"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>
